@model prjRentalManagement.Models.building
@{
    ViewBag.Title = "Create Building";
}
<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>building</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.province, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.province, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.postalCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.postalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.postalCode, "", new { @class = "text-danger" })
        </div>
    </div>
    @*If no Owner login -> Displays a dropdown list for selecting an owner*@
    @if (Session["owner"] == null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ownerId, "ownerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ownerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ownerId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @*If the Owner Is Logged In -> set ownerId to the logged-in owner's session value*@
    @if (Session["owner"] != null)
    {
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.ownerId, new { htmlAttributes = new { @class = "form-control", @Value = Session["owner"].ToString(), @style = "display: none" } })
                @Html.ValidationMessageFor(model => model.ownerId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @*If no Manager logged in -> displays a dropdown list for selecting a manager*@
    @if (Session["manager"] == null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.managerId, "managerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("managerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.managerId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @*If the Manager logged in -> set managerId to the logged-in manager's session value'*@
    @if (Session["manager"] != null)
    {
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.managerId, new { htmlAttributes = new { @class = "form-control", @Value = Session["manager"].ToString(), @style = "display: none" } })
                @Html.ValidationMessageFor(model => model.managerId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
