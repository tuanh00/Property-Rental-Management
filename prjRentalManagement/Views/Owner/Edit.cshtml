@model prjRentalManagement.Models.owner
@{
    ViewBag.Title = "Edit Owner";
}
<h2>Edit Owner</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ownerId)

        <!-- Hidden field to pass the current hashed password -->
        <input type="hidden" name="currentPassword" value="@Model.password" />

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 mt-2">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 mt-2">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Optional new password field -->
        <div class="form-group mt-2">
            @Html.LabelFor(model => model.password, "New Password (Optional)", htmlAttributes: new { @class = "control-label col-md-2 fw-bold" })
            <div class="col-md-10 mt-2">
                <input type="password" name="password" id="password" class="form-control" placeholder="Leave blank to keep current password" />
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 mt-2">
                @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-3 mb-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script>$(document).ready(function () {
            // Disable validation for the password field initially
            $("#password").rules("add", {
                minlength: 8,
                maxlength: 64,
                messages: {
                    minlength: "The password must be at least 8 characters.",
                    maxlength: "The password cannot exceed 64 characters."
                }
            });

            // Dynamically enable validation only if the field is not empty
            $("#password").on("input", function () {
                if ($(this).val().length === 0) {
                    $(this).rules("remove");
                } else {
                    $(this).rules("add", {
                        minlength: 8,
                        maxlength: 64,
                        messages: {
                            minlength: "The password must be at least 8 characters.",
                            maxlength: "The password cannot exceed 64 characters."
                        }
                    });
                }
            });
        });</script>
}
