@model IEnumerable<prjRentalManagement.Models.messageOwner>
@{
    ViewBag.Title = "Owner Messages";
}
<h2>Messages</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    @*Dynamic headers based on the session*@
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.message)
        </th>
        @*If no Manager is logged in -> displayed Manager Name header*@
        @if (Session["manager"] == null)
        {
            <th>
                @Html.DisplayNameFor(model => model.manager.name)
            </th>
        }
        @*if no Owner is logged in -> displayed Owner Name header*@
        @if (Session["owner"] == null)
        {
            <th>
                @Html.DisplayNameFor(model => model.owner.name)
            </th>
        }
        <th></th>
    </tr>
    @*--Message Row--*@
    @*1. When a Manager is Not Logged In -> displayed only messages that match the current logged-in owner*@
    @if (Session["manager"] == null)
    {
        foreach (var item in Model.Where(i => i.ownerId == Convert.ToInt32(Session["owner"])))
        {
            <tr>
                @*1.1 show msg content*@
                <td>
                    @Html.DisplayFor(modelItem => item.message)
                </td>
                @*1.2 no Manager is logged in -> display Manager Name*@
                @if (Session["manager"] == null)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.manager.name)
                    </td>
                }
                @*1.2 no Owner is logged in -> display Owner Name*@
                @if (Session["owner"] == null)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.owner.name)
                    </td>
                }
                @*1.3 Action section*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.messageId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.messageId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.messageId })
                </td>
            </tr>
        }
    }
    @*2. When a Manager is Logged In*@
    else
    {
        foreach (var item in Model.Where(i => i.managerId == Convert.ToInt32(Session["manager"])))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.message)
                </td>
                @if (Session["manager"] == null)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.manager.name)
                    </td>
                }
                @if (Session["owner"] == null)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.owner.name)
                    </td>
                }
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.messageId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.messageId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.messageId })
                </td>
            </tr>
        }
    }
</table>

